@page "/Calculadora"
@rendermode InteractiveServer
<PageTitle>Calculadora</PageTitle>






<div class="container mt-5">
  <div class="row justify-content-center">
    <div class="col-md-6">
      <div class="card shadow-lg">
        <div class="card-body">
          <h2 class="card-title text-center mb-4">Calculadora</h2>
          <p class="text-center text-muted">Realiza operaciones básicas de forma sencilla.</p>

          <EditForm Model="@calculationModel" OnValidSubmit="HandleCalculation">
            <div class="mb-3">
              <label for="primerNumero" class="form-label">Primer número:</label>
              <InputNumber class="form-control form-control-lg" @bind-Value="calculationModel.PrimerNumero" />
            </div>

            <div class="mb-3">
              <label for="segundoNumero" class="form-label">Segundo número:</label>
              <InputNumber class="form-control form-control-lg" @bind-Value="calculationModel.SegundoNumero" />
            </div>

            <div class="mb-3">
              <label for="operacion" class="form-label">Operación:</label>
              <InputSelect class="form-select form-select-lg" @bind-Value="calculationModel.Operacion">
                <option value="+">Suma (+)</option>
                <option value="-">Resta (-)</option>
                <option value="*">Multiplicación (*)</option>
                <option value="/">División (/)</option>
              </InputSelect>
            </div>

            <div class="d-grid gap-2">
              <button type="submit" class="btn btn-primary btn-lg">Calcular</button>
            </div>

            <div class="mt-4">
              <p><strong>Resultado:</strong> @resultado</p>
            </div>
          </EditForm>
        </div>
      </div>
    </div>
  </div>
</div>

@code {
  private CalculationModel calculationModel = new CalculationModel();
  private double resultado;

  private void HandleCalculation()
  {
    switch (calculationModel.Operacion)
    {
      case "+":
        resultado = calculationModel.PrimerNumero + calculationModel.SegundoNumero;
        break;
      case "-":
        resultado = calculationModel.PrimerNumero - calculationModel.SegundoNumero;
        break;
      case "*":
        resultado = calculationModel.PrimerNumero * calculationModel.SegundoNumero;
        break;
      case "/":
        if (calculationModel.SegundoNumero != 0)
        {
          resultado = calculationModel.PrimerNumero / calculationModel.SegundoNumero;
        }
        else
        {
          resultado = double.NaN; // Para manejar la división por cero
        }
        break;
    }
  }

  public class CalculationModel
  {
    public double PrimerNumero { get; set; }
    public double SegundoNumero { get; set; }
    public string Operacion { get; set; }
  }
}


